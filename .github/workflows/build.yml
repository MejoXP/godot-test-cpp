name: Build
on:
  workflow_dispatch:
  push:
env:
  BUILD_TYPE: Debug

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        config:
          - name: "Linux Latest x64"
            artifact: "libCoreGame.so"
            bundle_name: "Linux"
            arch: "x64"
            os: ubuntu-latest
          - name: "macOS Latest x64"
            artifact: "libCoreGame.dylib"
            bundle_name: "macOS"
            arch: "x64"
            os: macos-latest
          - name: "Windows Latest x64"
            artifact: "CoreGame.dll"
            bundle_name: "Windows"
            arch: "x64"
            os: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Deps
        run: |
          echo Install Deps
      - name: Configure CMake
        shell: bash
        working-directory: CoreGame
        run: |
          mkdir -p dist/.cmake && cd dist/.cmake
          cmake ../.. -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      - name: Build
        shell: bash
        working-directory: CoreGame/dist/.cmake
        run: |
          cmake --build . -j8
      - name: Prepare Artifacts
        shell: bash
        working-directory: CoreGame/dist
        run: |
          cd ${{ matrix.config.bundle_name }}/${{ matrix.config.arch }}/${{ env.BUILD_TYPE }}
          mkdir ~/dist && mv ${{ matrix.config.artifact }} ~/dist
          cd ~/dist && pwd && ls -la
         
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.config.artifact }}
          path: ~/dist/${{ matrix.config.artifact }}